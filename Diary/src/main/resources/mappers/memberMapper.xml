<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<mapper namespace="com.diary.smart.dao.MemberMapper">

	<!-- 회원 정보 저장 -->
	<insert id="joinMember" parameterType="Member">
		insert into ID_USER_TB
		(user_no_pk, user_id, user_pw, user_nm, user_birth, user_phone,
		user_add1)
		values
		(SEQ_ID_USER_TB_user_no_pk.nextval, #{user_id},
		#{user_pw},
		#{user_nm}, #{user_birth},
		#{user_phone}, #{user_add1})
	</insert>


	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="Member">
		update ID_USER_TB set
		user_pw = #{user_pw}
		, user_nm = #{user_nm}
		, user_birth = #{user_birth}
		, user_phone = #{user_phone}
		, user_mvseat = #{user_mvseat}
		, user_add1
		= #{user_add1}
		, user_add2
		= #{user_add2}
		, user_add3 = #{user_add3}
		where user_id = #{user_id}
	</update>


	<!-- 회원 탈퇴 -->
	<!-- 진짜 삭제가아니라 탈퇴플래그 수정만해주는거임!!!!! -->
	<update id="deleteMember" parameterType="int">
		update ID_USER_TB set
		user_dflag = 'Y'
		where user_no_pk = #{user_no_pk}
	</update>

	<!-- 회원의 친구리스트 조회 -->
	<select id="friendList" parameterType="int" resultType="HashMap">
		select
		f.user_frno, u.user_id, u.user_nm, u.user_phone
		from id_user_tb u, id_userfrno_tb f
		where u.user_no_pk = f.user_frno
		and
		f.user_no_fk = #{f.user_no_fk}
	</select>

	<!-- 단일 회원 조회(id중복조회나 등등에 사용) -->
	<select id="selectMember" parameterType="String" resultType="Member">
		select user_no_pk
		, user_aflag,
		user_id
		, user_pw
		, user_nm
		, user_birth
		, user_phone
		, user_mvseat
		,
		user_jodt
		, user_dflag
		, user_add1
		, user_add2
		, user_add3
		, user_ddt
		from ID_USER_TB
		where
		user_id = #{user_id}
	</select>

	<!-- 인증된 회원 flag 변경 -->
	<update id="authenticated" parameterType="String">
		update ID_USER_TB set
		user_aflag = 1
		where user_id = #{user_id}
	</update>

	<!-- 모든 친구 번호 정보 조회 -->
<!-- <select id="aaa" parameterType="int" resultType="HashMap"> select u.user_nm, 
		u.user_phone from ID_USERFRNO_TB f, ID_USER_TB u where f.user_frno = u.user_no_pk 
		and f.user_no_fk = #{f.user_no_fk} </select> 동행 번호 조회 <select id="asd" parameterType="int" 
		resultType="HashMap"> select u.user_nm, u.user_phone from id_user_tb u, id_scfrno_tb 
		s where u.user_no_pk = s.sc_frno and s.sc_no_fk = #{s.sc_no_fk} </select> -->


	<!-- 친구 id로 검색 후 저장 -->
	<insert id="addFriend" parameterType="int">
		insert into ID_USERFRNO_TB
		(user_no_fk, user_frno) values (#{0},
		#{1})
	</insert>

</mapper> 
